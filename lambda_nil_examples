(remove-applic-lambda-nil
'(applic
(lambda-simple
(fact)
(seq ((set (var fact) (box (var fact)))

(box-set
(var fact)
(lambda-simple
(n)
(if3 (applic (var zero?) ((var n)))
(const 1)

(applic
	(var *)
	((var n)
		(applic
			(box-get (var fact))
			((applic (var -) ((var n) (const 1))))))))))
(applic
	(lambda-simple () (applic (box-get (var fact)) ((const 5))))
	()) 
)))
((const #f))
))


(applic
	(lambda-simple () 1)
	())


(remove-applic-lambda-nil '(applic (lambda-simple () (applic (lambda-simple () 1) ())) ()))
	;#t
(is_redundant? '(applic (lambda-simple (a) 1) ()))
	;#f
(is_redundant? '(applic (lambda-simple () 1) ((const 2))))
	;#f but eyzlenu returns #t
	;we didn't take care of that because it's not valid lambda syntax
(is_redundant? '((lambda-simple (a) 1) ()))
	;#f
(is_redundant? '(applic (lambda-var (a) 1) ()))
	;#f

(remove-applic-lambda-nil (parse '(lambda () a (lambda () (lambda () b)))))

(remove-applic-lambda-nil (parse '((lambda a a))))

(remove-applic-lambda-nil (parse '((lambda () ((lambda () ((lambda () ((lambda () ((lambda () ((lambda () ((lambda () (+)))))))))))))))))

(remove-applic-lambda-nil (parse   '(((lambda () f)) ((lambda () g)) ((lambda () h)) (z (m c (d ((lambda () ((lambda () ((lambda () ((lambda () ((lambda () ((lambda () ((lambda () (+)))))))))))))))))))
))
